{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6RAoCeA,MAhCf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAEjD,OAGE,cAFA,CAEA,OAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCqCOC,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,yEAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IATjC,2C,kEAcVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OAGE,aAFA,CAEA,WAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GArCT0B,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.41ebe0cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  //component가 state가 필요없을 경우에는 그냥 function component로 써줘도 됨\r\n  return (\r\n    //img에서 alt와 title: 포스터 위에 마우스 가져갔을 때 영화 이름뜨게 함.\r\n    //create-react-app 덕분에, class 옆에 style={{backgroundColor: \"red\"}} 같이 css 적용 가능.\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\"; // data fetch를 위함\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [], //미래에 쓰일 것을 예상하고 만들어놔도 되고, 안만들어도 상관은 없음.\n  };\n\n  getMovies = async () => {\n    //async와 await: 함수가 비동기. 실행이 시간이 걸릴 수도 있으니 기다리라는 말.\n    const {\n      data: {\n        data: { movies }, // 받아온거.data.data.movies와 똑같은말. 이후에 더 편하게 쓰게 하려고!\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\" //끝에 sort_by=rating은 list를 sort한 것\n    ); //npm i axios 하고 써야 됨. API 주소에서 data를 가져온 것!\n    this.setState({ movies: movies, isLoading: false }); //state의 movies를 받아온 movies로 설정\n  };\n\n  componentDidMount() {\n    //fetch() : to fetch data, axios와 같은 역할 함. axios는 fetch위의 layer 같은 개념.\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      //html처럼 보이지만 이건 결국 javascript이기 떄문에, class 말고 clasName이라는 attribute 사용해야 함. (javascript clas 안에 있으면 component clas에 의해 혼란스러워질 수 있음)\n      //jsx에서 완벽한 html처럼 쓰지는 않는다는게 핵심!\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie //받아온 movies 값을 사용해 rendering?\n                key={movie.id} //React에서 list의 모든 원소는 unique해야 하기 때문\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}